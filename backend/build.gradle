import org.jooq.meta.jaxb.Logging

plugins {
    id 'org.springframework.boot' version '3.0.0-M4'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'application'
    id 'com.google.cloud.tools.jib' version '3.2.1'
    id 'nu.studer.jooq' version '7.1.1'
}

group = 'com.ericgha'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
mainClassName = String.format("%s.%s.docuCloudApplication.class",  group, rootProject.name)

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.jooq:jooq-postgres-extensions'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:testcontainers:1.17.3'
    testImplementation 'org.testcontainers:postgresql:1.17.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.3'
    testImplementation 'org.mockito:mockito-inline:4.6.1'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    jooqGenerator 'org.postgresql:postgresql:42.3.2'
    jooqGenerator 'org.jooq:jooq-postgres-extensions'
}

tasks.named('test') {
    environment 'SPRING_PROFILES_ACTIVE','dev,test'
    useJUnitPlatform()
}

jib {
    extraDirectories {
        paths {
            path {
                from = project(':frontend').buildDir
                into = '/www'
            }
        }
    }
    from {
        image = "amazoncorretto:17-alpine3.15"
    }
    to {
        image = rootProject.name
        tags = [version]
    }
    container {
        jvmFlags = ["-Xms" + (hasProperty('MEMORY') ? findProperty('MEMORY') :'256') + "m", '-Xdebug']
        ports = ['8080']
        volumes = ['/data']
        environment = [
                'VERSION': version,
                'SPRING_PROFILES_ACTIVE': 'prod'
        ]
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
}

jooq {
    version = '3.17.2'
    configurations {

        main {  // name of the jOOQ configuration
            generateSchemaSourceOnCompilation = true  // default (can be omitted)

            generationTool {
                logging = Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5435/docu-cloud-dev'
                    user = 'root'
                    password = 'password'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                        forcedTypes {
                            forcedType {
//                                name = 'varchar'
                                userType = 'org.jooq.postgres.extensions.types.Ltree'
                                binding = 'org.jooq.postgres.extensions.bindings.LtreeBinding'
                                includeExpression = '.*tree.path.*'
                                includeTypes = 'LTREE?'
                            }
                        }
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'com.ericgha.docuCloud.jooq'
                        directory = 'build/generated/source/jooq/main'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

//jibDockerBuild.dependsOn(':frontend:build')
//jibBuildTar.dependsOn(':frontend:build')