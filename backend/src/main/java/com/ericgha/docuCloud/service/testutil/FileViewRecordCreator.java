package com.ericgha.docuCloud.service.testutil;

import com.ericgha.docuCloud.dto.CloudUser;
import com.ericgha.docuCloud.jooq.tables.records.FileViewRecord;
import com.ericgha.docuCloud.jooq.tables.records.TreeRecord;
import lombok.NonNull;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.UUID;

/**
 * Creates "Fake" FILE_VIEW objects which link a list of file objects
 * to a list of files via tree_join_file table (ie create a full FILE_VIEW record)
 * file_id fields are auto generated by this, while uploaded_at and linked_at fields are
 * left null to be generated by the database.  Checksum is FILE# where # is the
 * index of the Object being linked in the input array.  Ie OBJECT[0] -> file0, therefore
 * file object relationships can be tracked by checksum.  Size is the index in the array ie
 * Object[0] -> 0.
 */
public class FileViewRecordCreator {

    private static final String CHECKSUM_PREFIX = "file";

    static List<FileViewRecord> create(List<TreeRecord> treeRecords, CloudUser cloudUser, Comparator<FileViewRecord> outputComparator) {
        List<FileViewRecord> fvRecords = new ArrayList<>();
        for (int i = 0; i < treeRecords.size(); i++) {
            var tr = treeRecords.get(i);
            fvRecords.add( create(treeRecords.get(i),
                    cloudUser, i) );
        }
        fvRecords.sort(outputComparator);
        return fvRecords;
    }

    // Index is used to set checksum and size values.  See class description
    static FileViewRecord create(@NonNull TreeRecord treeRecord, @NonNull CloudUser cloudUser, long index) {
        var fvRec = new FileViewRecord();
        fvRec.setObjectId( treeRecord.getObjectId() );
        fvRec.setFileId( UUID.randomUUID() );
        fvRec.setUserId( cloudUser.getUserId() );
        fvRec.setChecksum( CHECKSUM_PREFIX + index );
        fvRec.setSize( index );
        return fvRec;
    }

}
